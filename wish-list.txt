Software I wish existed and would welcome discovering. I strongly prefer open
source, but closed source is often better than nothing:


A real-time audio synthesis engine that runs on general-purpose computing
hardware and intelligently scales up number of simultaneous patches/polyphony
based on available hardware resources.
[TessellationOS](http://tessellation.cs.berkeley.edu/) could be an excellent
OS to implement this system on, if/when it reaches a public release. This one I
really would require open-source for - what I want is for the patches I design
to never become unplayable.


A distributed command-line code review system that integrates cleanly with
native git, with an optional web UI for ease-of-use. It should support tracking
a branch's entire history (including rebases) without requiring extra
abstractions (like Gerrit's Changeset-Id). Some haphazard design notes on how
it might be built are at https://github.com/NateEag/git-revue.


An introduction to the basics of RESTful APIs in the form of a text-based
adventure. Support the HTTP verbs as commands, and have the player manipulate
the world to achieve victory conditions. I need to think of a scenario where
object creation and destruction makes sense... Maybe make the player a god of
some sort?


A program to filter style/static checker results by lines added and changed
in the diff between commits. In-progress at
https://github.com/NateEag/diff-check.


An HTML/CSS/JS style checker that warns you when a construct is not supported
by targeted browsers. The data backing caniuse should make this possible, but
it could be fairly complex to adapt it to work with HTML/CSS/JS parsers.
check-caniuse might be an okay name? check-browser-compat?


A program that takes two SQL schemas and outputs the SQL to convert one to the
other. Call it schema-diff. Liquibase has parts of this, but it's not clear to
me that schema-diff as such is there (see potential-technologies.txt).


A two-player web-based implementation of the Kriegspiel chess variant. This
probably would be easy to write, but it's a low priority, given all the other
things I want to bang out.
