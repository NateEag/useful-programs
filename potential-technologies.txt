I'm a programmer.

Sometimes, I hear about software tools I think I should probably investigate
but don't have time to look into right away.

I put those here.


For AJAXy websites, I rather like the idea of spin.js, as it is much lighter
than animated GIFs/PNGs (especially if you need multiple sizes), and works in a
wide array of browsers. http://fgnass.github.com/spin.js/


nix is a functional package manager, with most of the features I've been
wanting. There's also a Linux distro built on top of it. It's an off-the-beaten
path alternative to something like Ansible that has some lovely properties.
http://nixos.org/nix/


bashible is a pure-bash Ansible alternative. I'm not sure what I think of it,
but if I'm ever in a context where introducing Ansible / Python is a hard sell
and bash is already available...
https://github.com/mig1984/bashible/blob/master/README.md


NaturalDocs is a tool for generating an API reference from source code
comments, using a more readable, lightweight syntax than JavaDoc.
http://www.naturaldocs.org/


zettlr is an open-source Markdown editor meant to help fill the niche of
"zettlekasten" or "mindmap" personal knowledge stores. I'm currently using my
own homebrewed Markdown-based setup, but might be worth looking at closer
someday: https://www.zettlr.com/


bup (https://bup.github.io/) adapts Git's packfile format to a backup system
that deduplicates within binary files. Not sure it's ready for prime-time, but
it's definitely got potential.


svneverever is a little tool for getting an overview of an svn repo's structure
across history. It looks handy for preparing to move to a different VCS (like,
say, git). https://github.com/hartwork/svneverever


svn2git is a name used by several projects. The version I'm most interested in
is this one, used by KDE to split its SVN repos into multiple git repos:
https://github.com/svn-all-fast-export/svn2git.


Fork is a Git GUI that appears to actually be *useful*. It looks like you can
rebase by dragging commits around, which really would make life easier. Free to
use (at present) but not OSS: https://fork.dev/


GitUp is a Git GUI that was mentioned as an OSS competitor to Fork. It doesn't
seem quite as full-featured, and it's MacOS only, but it does look a major
improvement on gitk. https://gitup.co/


git-heatmap gives you an overview of what files are edited most often in a git
repository. I expect it would help you zoom in on "interesting" files quickly
when getting to know a new codebase. https://github.com/jez/git-heatmap


git-quick-stats lets you see a handful of interesting statistics on
a git repo: https://github.com/arzzen/git-quick-stats/


RosettaGit is an attempt to make a git repo that shows how to do a set of
common tasks in about every programming language under the sun. It's definitely
not perfect, but it might be a handy tool for getting a rough sense of how
things work in a language you haven't seen before. https://rosettagit.org/


In a similar vein, SourceTrail would be useful in exploring new projects if
they happen to be in one of the languages it supports:
https://github.com/CoatiSoftware/Sourcetrail


http://www.bacula.org/en/ is a backup system that Spencer recommends. It's
open source and fairly industrial-strength, he says.


Pipsi is a tool for installing python scripts as standalone commands. Think of
it as Python's answer to 'npm install -g'. https://github.com/mitsuhiko/pipsi


[Terraform](https://www.terraform.io/) is an open-source tool for defining
cloud-based infrastructure in declarative text files. It's interesting to me.
Might be usable to implement my ideal literate-programming-ish structure for
projects, where the central doc declares and documents the DNS records, with
everything else fanning out off of that (load balancers, DBs, worker nodes, etc
are all just there to support a domain name, for most network services).


[Pulumi](https://www.pulumi.com) is an open-source tool for defining
cloud-based infrastructure using mainstream declarative programming languages.
I feel like that's probably worse for the readability, but that's hard to know
short of trying them both. Definitely feels like it's meant to compete with
Terraform.


Click is a Python module for defining command-line tools via function
decorators. I prefer docopt for simple tools, but if you're building a more
complex CLI, a la Mercurial, I doubt docopt is good enough.
http://click.pocoo.org/5/


oclif is a JS module for writing CLIs that looks pretty interesting. I'm
tempted to give it a test drive. https://oclif.io


tqdm turns Python iterators into iterators that output a progress prompt.
https://github.com/noamraph/tqdm


http://amoffat.github.com/sh/ is a python module for handling subprocesses. It
appears to suck much less than subprocess.


An alternative to the above sh module is plumbum, which was loosely inspired by
it: https://plumbum.readthedocs.io/en/latest/


arrow is an improved(?), unified datetime library for Python. Looks nice.


moment.js is a pretty-looking datetime library for JS. It also has a variant
that supports timezones (though why that's not just a built-in default is
beyond me).


A0 Time Zone Migration is a tool to migrate existing piles of time data based
on the historical changes to the tzinfo database:
https://a0.github.io/a0-tzmigration/


Timezone Boundary Builder does what it says on the tin. It uses OpenStreetMap
to build a shapefile of the world's timezones.
https://github.com/evansiroky/timezone-boundary-builder If you just want the
data for a particular release, it's available on the releases page of the
GitHub project:
https://github.com/evansiroky/timezone-boundary-builder/releases


Records is a python module for working with DBs, by the legendary Kenneth
Reitz. https://github.com/kennethreitz/records


requests is a Python library for speaking HTTP that gets rave reviews:
http://docs.python-requests.org/en/latest/


bleach is a Python library for cleaning up HTML
https://github.com/jsocol/bleach


Fabric is a Python module for automating tasks over SSH. Not quite like a
configuration management tool, but still worth knowing about, I suppose.
http://docs.fabfile.org/en/1.4.1/index.html


I just learned that you can use AWS's IAM system for managing SSH logins to
servers: https://github.com/elpy1/ssh-over-ssm/blob/master/README.md


Many programs and systems do not support Unicode correctly (or at all). When
you need to work with them in Python, unidecode is (probably) a useful module.
http://www.tablix.org/~avian/git/unidecode.git


uni is a CLI tool for getting Unicode info about strings and looking up emoji.
https://github.com/arp242/uni


supervisord is a Python process control system. Might be worth checking out at
some point. http://supervisord.org/


xfst is a Unix-based tool from Xerox PARC that is a sort of competitor to
regular expressions. Consider checking it out someday when I have too much
free time. http://www.cis.upenn.edu/~cis639/docs/xfst.html


Regexp::Debugger is an awesome-looking Perl tool for debugging regular
expressions. It has a command-line mode of operation, and I imagine with a
little work you could wrap it up into what I would want, a command something
like `regex-debug <expression> <string>`. Since PCRE stands for Perl Compatible
Regular Expressions, that might actually be pretty handy.
https://metacpan.org/pod/Regexp::Debugger


emacsy is a not-yet-existent system for embedding an Emacs-ish approach to
user interface creation in arbitrary binaries:
https://github.com/secelis/emacsy


urlwatch is a program for monitoring websites for changes. Think of it as being
an RSS substitute for all those pages that don't offer RSS.
https://github.com/thp/urlwatch


fail2ban is something I should probably have installed on any web-facing
servers I admin. It auto-bans IPs that look like they're abusing the system,
via iptables. http://www.fail2ban.org/wiki/index.php/Main_Page


SchemaSpy looks at your schemas and makes a navigable HTML docs page, complete
with diagrams of the DB. I would very much like to integrate it with git's
post-receive hook to have an auto-updated page on project dev sites that
outlines the schema as it is in, say, master. http://schemaspy.sourceforge.net/


SchemaCrawler explores schemas, and *also* has extensible support for linting
schemas. http://sualeh.github.io/SchemaCrawler/


PEV is a GUI for looking at PostGres query explanations:
https://github.com/AlexTatiyants/pev


mermaid is a tool for generating diagrams from simple text specifications:
https://mermaidjs.github.io/


Markdeep extends Markdown to include diagram rendering features:
https://casual-effects.com/markdeep/


[Graphviz](https://graphviz.org/) is the 900-pound-gorilla of graph rendering.
I could see it being very helpful for generating documentation diagrams from
source code, especially for things like network architecture overviews (I think
that's what Terraform actually does). Could play into my evolving literate
programming style nicely, perhaps, as a tool to generate visual clarifications
about important hunks of code. [Sketchviz](https://sketchviz.com/new) uses it
with [roughjs](https://roughjs.com) and
[Viz.js](https://github.com/mdaines/viz.js/) to render rather charming
pseudo-hand-drawn documents.


[Dagre](https://github.com/dagrejs) is a suite of libraries for rendering
graphs in browsers using JS. Seems to support DOT (from graphviz) as its
graphing language and offers a D3-based renderer out of the box. Wonder how
hard it would be to get it to use RoughJS's SVG output?


[roughViz](https://github.com/jwilber/roughViz) uses roughJS, D3, and a few
other things to offer a pretty minimal API for making sketchy, hand-drawn,
hoverable charts.


Pencil is an OSS GUI prototyping tool. Kind of thing UX designers tend to want
to have available. No idea how well it actually works.
https://pencil.evolus.vn/


history.js provides an AJAX history interface that uses new HTML 5 pushState
when present, and defaults to the classic old # URL changes when not. It even
lets you store data with each state.
https://github.com/browserstate/history.js


Save Page State is a Chrome plugin that's supposed to let you freeze a page's
state to disk for further inspection and debugging at a later date. I think I
may start using it, and perhaps suggest to at least internal people that this
could be a good thing to add to their bug report tools:
https://github.com/vrtdev/save-page-state


http://qafoolabs.github.io/php-refactoring-browser/ is a refactoring tool for
PHP. Doesn't seem to be very far along yet, but it might be handy at some
point, especially if integrated with Emacs and php-mode.


csscss detects duplicate declarations in CSS files. Might be very handy.
http://zmoazeni.github.io/csscss/?hn=1


purifycss finds CSS that your application isn't using. Not sure how reliable it
is: https://github.com/purifycss/purifycss


Here is an amazingly compact stylesheet that makes basic text websites look
pretty good on most devices and screen sizes: https://jrl.ninja/etc/1/


Twig.js compiles Twig templates into JS. Could be great for AJAX-heavy apps,
if you have model templates.


Bugs Everywhere is a distributed bug tracker that apparently has support for
a central instance? If it's good, it might save me having to write it:
http://bugseverywhere.org/


jQuery Migrate is for migrating apps built around old jQueries to newer ones, while maintaining some methods/plugins not in the new builds that you might need for your legacy app: https://github.com/jquery/jquery-migrate/


I'd like a clean way to install a lot of githooks in parallel. Looks like
https://github.com/icefox/git-hooks might just do the job.


Lefthook is another hook manager. It parallelizes hooks, which is a neat trick.
I'm not sure it does much else well, but it's worth looking at some time.
https://github.com/Arkweid/lefthook


bower is a front-end package manager, which might be worth investigating.
https://github.com/bower/bower


box is a program that helps you build .phars: http://box-project.org/


boris is a nice-looking PHP REPL that doesn't work on Windows:
https://github.com/d11wtq/boris


zipkin is something Twitter uses for high-volume, time-oriented debug tracing.
http://twitter.github.io/zipkin/


Google Maps has some built-in tech for doing heatmaps:
https://developers.google.com/maps/documentation/javascript/layers#JSHeatMaps


Keypad-Mapper 3 is an Android app for entering OSM house number data. It
auto-records data for OpenCellID, which seems like it shouldn't be required,
but it is open source, so I could figure that out myself if I really cared.
https://github.com/msemm/Keypad-Mapper-3


Task Nearby is an Android app for location-based reminders. I'm giving it a try
to see how it works out. Basic functionality is free, advanced features require
an in-app purchase, but the whole thing is open source (or so this URL claims
- I guess I could theoretically build it myself and confirm): https://github.com/vermayash8/TaskNearby


Owntracks is an open-source location diary. Good for automating things based on
location, sharing location with friends and family. Not sure I have a use for
it, but it's worth being aware of, at least. https://owntracks.org/


There is finally an open source library for working with PSDs. It's in Ruby, but
it's still about the only game in town: https://github.com/layervault/psd.rb


gitslave is another attempt to solve the submodule problem.
http://gitslave.sourceforge.net/


git-series is a command for tracking changes to a patchset over time, built on
top of git's native data structures. Seems interesting, and relevant to some of
my vague desires for a VCS: https://github.com/git-series/git-series


gittorrent makes git just about entirely distributed, by the magic of
BitTorrent:
https://github.com/cjb/gittorrent


git-browse is a command for interactively exploring blame history.
https://github.com/georgebrock/git-browse


https://phpids.org is a library for auto-detecting and acting on suspicious
input from end-users. Think of it as a customizable fail2ban sort of tool.


Hydra is a network service password brute-forcer. I suspect it would be useful
in the same vein as sqlmap, for helping people understand how easy it actually
is to run attacks. https://github.com/vanhauser-thc/thc-hydra


http://phpsec.org/projects/phpsecinfo/ is PHP info for security. Not much
help, but it's something.


ungit is a pretty novice-friendly Git UI. It might be an *excellent* basis for
building the git tutorial system I wish existed, and also for building my
"rebase entire subtrees by dragging" feature I wish existed. It already has
single-branch rebases, so maybe it already can handle trees?


Amphetype looks like it might be a decent free typing trainer. Darn hard
to find one of those... https://code.google.com/p/amphetype/


Everyone needs SVG in JS. I'm not exactly sure how this relates to a browser's
SVG support, but it might come in handy someday regardless: http://svgjs.com/


Feather Icons is a collection of open-source SVG icons.
https://feathericons.com/


lighthouse is a web-app profiler from Google. It grades your app's performance
based on how someone with a moderately okay phone on 4G would experience it.
It's built for use within Google Chrome, but the core is in NodeJS and can be
run from the CLI. Open source, at least for now.
https://github.com/GoogleChrome/lighthouse#how-does-lighthouse-work


xhprof is a hierarchical function-level profiler for PHP. It is explicitly
meant to handle profiling in production environments. It lives here:
https://pecl.php.net/package/xhprof It does not support PHP 7, but there is a
fork that does: https://github.com/tideways/php-xhprof-extension


svgo is an SVG optimizer. Good thing to plug into build processes, so you can
keep full metadata in your project's VCS repository, and have the advantages of
stripped-down data in your builds. https://github.com/svg/svgo


Style guidelines for CSS, which look decent:
https://github.com/necolas/idiomatic-css


Style guidelines for JS which look decent:
https://github.com/rwaldron/idiomatic.js/


GraspJS is a tool for searching and editing JS based on the AST:
http://www.graspjs.com/


SonarQube is a multi-language static analysis and security vulnerability
detection tool. I've never used it but the idea intrigues me. Definitely smells
kinda enterprise Java-y, but that doesn't necessarily mean bad.
https://www.sonarqube.org/


For opt-in static typing in JS, there are two major options: Flow
(http://flowtype.org/) and TypeScript (https://www.typescriptlang.org/). They
both extend JS syntax, which I dislike because doing so breaks existing JS
tooling. Flow does support comment annotations as an alternative to syntax
extensions, but it does not support using JSDoc for type annotations
(https://github.com/facebook/flow/issues/5670), while TypeScript supports
inferring types from JSDoc comments
(https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html#jsdoc-types-are-used-for-type-information).
Given my dislike for breaking JS tooling by introducing syntax changes, the
obvious implication is that I should use TypeScript to type-check JS files
based on JSDoc and add a script to forbid the use of actual TypeScript files.
Welcome to crazytown. I'll note that documentation.js includes some work on
making JSDoc and Flow play together tnicely, though it's apparently not seeing
a lot of maintenance these days
(https://github.com/documentationjs/documentation).


Lunr is a full-text search engine written in JS. It's meant to be a sort of
simpler little-sibling to Solr, and it certainly appears to fit my aesthetic.
It would be feasible to use it to bang out search for static sites, by
generating a blob of JSON to be the search index at build time then using Lunr
in the browser to build out a search widget that loads that JSON.
https://lunrjs.com/


git-deploy is a robust-looking git-oriented deployment tool I would like to
try out someday: https://github.com/git-deploy/git-deploy


phabricator looks like a decent, open-source suite of software for
collaborating on software projects. No groundbreaking ideas, but if it
delivers the basics sanely, that'd beat most systems hands-down. Written in
PHP by an ex-FB employee: http://phabricator.org/


Zulip is a threaded real-time OSS chat system, with the goal of using threads
to enable asynchronous discussion. I'm hoping this is what I've been wanting
with my vague thoughts that Slack should work more like a real-time forum, and
I'd love a chance to try it out with a team. Plus, it's OSS.
https://zulipchat.com/


mattermost is an open-source Slack clone, and might well be what I'd pick for
an in-house chat client, should I ever have need of one:
http://www.mattermost.org/


BuildBot is an open-source tool for automating builds, tests, and releases:
http://buildbot.net/index.html


redo is a build manager, performing a job similar to make, ninja, and others,
described by djb and implemented by many, notably apenwarr. If I ever start
dealing with a project that actually has slow build times or difficulty
managing its dependencies correctly, I should consider trying it:
https://github.com/apenwarr/redo


statsd is an open-source daemon you can use for tracking stats with almost
zero impact on app performance, thanks to the power of UDP and not caring if
you miss an update here or there.


Chocolatey is a tool that might help with provisioning Windows boxes:
https://chocolatey.org/


https://github.com/hakimel/reveal.js is a nifty framework for doing
presentations in HTML/JS.


PHP SQL query construction library: https://github.com/auraphp/Aura.Sql_Query
Requires 5.4.


PHP HTTP request lib that looks promising: http://requests.ryanmccue.info/


FontForge could be useful if I'm ever trying to design a font.
That's not too likely, but could happen if I need an icon font.
http://fontforge.org/


Inter is not a program, just a potentially-useful dataset. It is an open-source
font designed for display of small text on small screens (think mobile device
interfaces): https://github.com/rsms/inter


Noto is a font from Google that tries to provide glyphs for all major
languages. Might be useful sometimes. https://www.google.com/get/noto/


Chat Over IMAP is more an idea than a specific product. It provides
decentralized instant messaging over an extended IMAP variant, falling back
cleanly to email when a contact's mailserver doesn't support the extended
protocol. If you want e2e encryption, clients can handle that themselves.
Weird, but a slick idea. Might just fall into the "worse is better" sweet spot
Richard Gabriel talked about. https://www.coi-dev.org/


Mailcheck is a JS plugin to check for typos in an email address's domain.
Should be great for cutting down on signup bounces.
https://github.com/Kicksend/mailcheck


Not actually a library, but another clever idea for confirming whether an
email address exists - as part of your validation, look up the mailserver and
ask it for a receipt for the mailbox. Apparently Exchange doesn't do this in
a compatible way, but if you addressed that and combined this with the above,
you'd be able to catch a whole lot of mistakes before they were made.
http://www.webdigi.co.uk/blog/2009/how-to-check-if-an-email-address-exists-without-sending-an-email/


xsv is a command-line tool for working with CSVs in a database-like manner. The
join and stats commands both look especially interesting. Looks like a godsend
for dealing with DB dumps. https://github.com/BurntSushi/xsv


Tool for working with CSVs in PHP, with a particular eye to doing low-memory
usage imports to a DB: https://github.com/goodby/csv


SheetJS lets you process CSVs in the browser, using JS:
http://sheetjs.com/


HandsonTable is an in-browser spreadsheet implementation, useful for letting
users touch up their CSVs before actually uploading records:
http://www.handsontable.com/


stylelint is an alternative style checker for CSS-likes, driven by PostCSS, and
thus able to understand any dialect PostCSS understands. You can write your own
plugins, so it's more analogous to eslint than most of the other ones I've
bumped into: https://stylelint.io


Clusterize.js lets you display huge datasets in a browser with decent
performance by just not rendering the offscreen tags. Utility is debatable,
since a huge list of rows isn't at all useful for understanding huge datasets,
but there may be cases where it's useful.


cssbeautify is a node.js-based tool for cleaning up stylesheet formatting.
It doesn't indent comments correctly, and it doesn't support in-place updates,
but it sure beats nothing. https://github.com/senchalabs/cssbeautify


csscomb looks like a useful stylesheet beautifier. Dunno how it does on SCSS.
http://csscomb.com/


cssprefixer is a CSS processor that saves the need to write out all the
browser-specific prefixes for not-yet-widely-supported prefixes. Not sure I
want to use this particular tool just yet, but that functionality might be a
nice addition to SCSS, as it'd be cleaner than using mixins for the same
purpose. http://cssprefixer.appspot.com/


autoprefixer is a different CSS processor that adds browser-specific prefixes
to CSS. Should compare these two next time I'm building a CSS pipeline.
https://github.com/ai/autoprefixer


oldie is a tool for translating CSS into IE-friendly dialects, as much as it
can. I'm sure it's not perfect, but it does sound interesting.
https://github.com/jonathantneal/oldie


postcss is the infrastructure upon which autoprefixer and friends are built:
https://github.com/postcss/postcss


spritesmith is a grunt task for generating spritesheets from a set of images. I
don't love grunt/gulp, being a fan of `npm run` as simpler and just about as
powerful, but still worth noting.
https://github.com/Ensighten/grunt-spritesmith


http://caniuse.com/ is the lookup table of "what browsers support this
feature?" that I've wanted for years. The data driving it is on GitHub,
which I have cloned Just In Case.


http://html5please.com/ is related to caniuse.com, but is a bit more
full-featured. It suggests alternatives for browsers that don't have the
feature you're looking at.


If you're writing web-related development tools, you may find this data from
MDN useful. It's structured info about most of the features web browsers
support. https://github.com/mdn/data


presto is Facebook's data warehousing backend:
http://prestodb.io/


Falcon is an open-source, multi-database SQL client. It appears to be an
Electron app using React, which is either a positive (easy to work on if you're
a web dev) or a negative (resource-intensive compared to native apps),
depending who you talk to. A quick test didn't impress me much, but maybe it
will improve over time. https://github.com/plotly/falcon


Liquibase is a Java tool for refactoring DBs and tracking the structural
changes. It is Java, but it might just be the general-purpose tool I've been
looking for, since you could use it with raw SQL, and without configuring an
ORM.
http://www.liquibase.org/


sqitch is a Perl tool for doing much the same thing. It looks pretty
interesting. Like Liquibase, it is *not* tied to a particular framework,
language, or DB - it just happens to be written in Perl. http://sqitch.org/


https://skeema.io is a declarative database schema manager. It's MySQL-only,
which I don't like, but the comments from the author on Hacker News suggest
that he agrees with the instincts I've had for years (and since he worked at FB
and Tumblr, people are likely to listen to his opinions):
https://news.ycombinator.com/item?id=19881817


https://github.com/k0kubun/sqldef/ looks like it might actually be the
SQL-based DB schema declaration system I've wanted. Supports MySQL and
PostGres, so maybe it wouldn't be so hard to port to other DB engines? Note
that it cannot infer renames, so you have to do those manually.


Prisma is a decent-looking JS ORM (they claim "ORM alternative", but it doesn't
look *that* alternative to me). I doubt it holds a candle to SQLAlchemy, but I
would like to try it some time. https://www.prisma.io


Alembic is a SQL DB schema migration manager built around SQLAlchemy.
https://bitbucket.org/zzzeek/alembic


ruckusing-migrations is a PHP library for handling DB schema migrations.
https://github.com/ruckus/ruckusing-migrations


LMDB claims to be a really fast, really small, low-memory-usage key-value store
with reliable persistence: https://symas.com/lmdb/


Stripe offers an open-source jQuery plugin for building credit card processing
forms. It seems very solid:
https://github.com/stripe/jquery.payment


Uppy is an ES 6 file uploader UI that looks pretty slick. I have not yet
actually dealt with it, though: https://uppy.io/


Yahoo has a JS-based tool for measuring perceived performance. Having seen a
little of what Google Analytics can do, I'm not sure this would ever be
necessary, but it might be worth looking into sometime:
https://github.com/yahoo/boomerang


A media lightboxing tool with markup that degrades quite well (and apparently
works back to IE 6):
http://www.no-margin-for-errors.com/projects/prettyphoto-jquery-lightbox-clone/


js-beautify is a library for formatting JS, CSS, and HTML. I should give it a
trial run some time.
https://github.com/einars/js-beautify


https://github.com/jedmao/codepainter is a JS beautifier that can infer
preferred style from sample files. Interesting idea - dunno how good it is.


timeago is a jQuery plugin for fuzzy dates in webpages.
http://timeago.yarp.com/


websocketd is a fascinating adapter to let you write WebSocket servers in
whatever language you like. It uses streaming on stdin/stdout as its interface,
and says "A line of text represents a new event." Means you'd have to encode
newlines in output, but then, you'd probably mostly want to use JSON anyway.
Clever little piece of design and I'm tempted to give it a shot.
http://websocketd.com/


appserver is the new PHP answer to gunicorn and the like - multithreaded
server written in PHP. http://www.appserver.io/


appserver is built on krakjoe/pthreads, which appears to have Windows support.
This should mean, in principle, that I can get things like boris (which
requires POSIX threads) working. It also means I may have some infrastructure
that might work for my hypothetical PHP code assistance daemon.


kdenlive is an open-source video editor. https://kdenlive.org/en/


lftp is, apparently, a very powerful open-source file transfer tool.
http://lftp.yar.ru/


Piwik is the open-source answer to Google Analytics. I may try using it for a
future project or two, but I should probably compare to GA first so I can be
aware of what I am or am not missing. http://piwik.org/


There is also GoAccess, a modern take on an oldschool idea (parsing webserver
logs for analytics): https://goaccess.io


ExifTool is a Swiss-Army chainsaw for image metadata (command-line tool and
library). It is, appropriately enough, written in the Swiss-Army chainsaw
language.


smartcrop.js is a basic automatic image cropper:
https://github.com/jwagner/smartcrop.js/


OpenSeadragon provides a web-based mobile-friendly viewer for high-resolution
images, which you can see here: https://openseadragon.github.io/


Zebra Crossing is a Java library for doing barcode / QR code recognition, meant
specifically for use in Android apps (but with a generally-applicable core).
https://github.com/zxing/zxing/ There is also a mobile app providing bar code
scanning in the repository, which is available on Google Play at
https://play.google.com/store/apps/details?id=com.srowen.bs.android


riot.js is a lightweight Model-View-"Presenter" JS framework. Cursory
inspection, plus reading of its manifesto blog post, makes me think it would
fit my style very nicely.
https://moot.it/blog/technology/riotjs-the-1kb-mvp-framework.html and
https://github.com/moot/riotjs/


clrs.cc is a small CSS (and CSS preprocessor) package giving CSS better default
colors.


InuitCSS is a CSS framework from a CSS expert whose opinions I trust. It's less
a monolithic framework and more a collection of (S)CSS tools you can import as
you have need. I should give it a whirl sometime.
https://github.com/inuitcss/inuitcss


On a similar note, Bourbon/Neat/Bitters is another more-modular SCSS
framework/toolset: https://neat.bourbon.io/


Semantic UI is a CSS/JS framework that's something of an answer to Bootstrap.
I'm not exactly sure what I think of their "readable English" classes, but they
certainly are more readable than Bootstrap's. https://semantic-ui.com/


Ink is a framework for making responsive HTML emails, and claims to have
good-looking results everywhere, even in Outlook. Having suffered through some
HTML email implementation tasks, I'm intrigued.


strace looks *extremely* useful when a live process is misbehaving and you
don't know why (especially one you don't have source code to). It traces all
system calls/events from the process, so it'd be most useful in a system
programmer's hands, but it might still be handy even for a high-level wuss
like me.


nginx 1.13.4 and up have an interesting module called ngx_http_mirror_module:
https://nginx.org/en/docs/http/ngx_http_mirror_module.html . It looks like a
great building block to build an HTTP-level variation on the Ruby
[Scientist](https://github.com/github/scientist) module, so that you can try
entirely new setups under a production load without impacting production
results at all. ...that's a terrible explanation but I know what I mean.


forceps is a Ruby gem for pulling down a specific entity's data and all
dependencies, specifically for debugging obscure problems. I don't use Ruby,
but I've wanted this before, so if I need it again, this might be a place to
start, just to understand the problem domain better.
https://github.com/jorgemanrubia/forceps


omnipay is a PHP CC processing gateway API wrapper that handles a LOT of
different gateways. https://github.com/omnipay/omnipay


watchman is for watching files and doing something when they change.
https://github.com/facebook/watchman


gor is a tool for capturing and replaying HTTP requests from prod.
https://github.com/buger/gor


multiline is a cute hack to get multiline strings in JS. ES 6 will have them
natively, and they aren't necessary, but it would clean things up a bit, in
theory.
https://github.com/sindresorhus/multiline


Responsive tables? tablesaw to the rescue!
https://github.com/filamentgroup/tablesaw


uncss is a node.js tool for finding unused CSS selectors:
https://github.com/giakki/uncss


ForgeFed is a federation protocol for version control services, meant to
support interoperability for bug reporting, merge requests, and notifications
across instances. Think of it as an attempt at making something like GitLab
distributed and pluggable, if you aren't familiar with federation.
https://forgefed.peers.community/


Handshake is an experiment in decentralized domain name system design. The core
idea appears to be roughly that names are registered via blind auction in a
cryptocurrency, the winning bidder spends their coins on the name, and that
transaction winds up embedding the two-year name registration in the
blockchain. I didn't look closely, so that could be way wrong, but it's an
interesting idea. https://handshake.org/


gogs is a git repository viewer written in Go, and thus hopefully installable
via binary fairly easily: https://github.com/gogits/gogs


Rewind is a set of ruby scripts for learning interesting tidbits about a
project's development history, based on its git repo:
https://github.com/gilesbowkett/rewind


BFG Repo Cleaner is a simpler way to nuke data from a git repo's history.
Having used filter-branch for this job a few times, I wouldn't mind giving it
a spin next time I have to do this.
http://rtyley.github.io/bfg-repo-cleaner/


docopt is a standard for turning a command-line app's help string into an
argument parser. It works for several languages, including Python, Ruby,
JavaScript, PHP, and Go:
http://docopt.org/


jq is a command-line tool for processing JSON the way you'd use awk/sed/grep
for text.
http://stedolan.github.io/jq/


fx is a command-line tool for exploring and processing JSON. Instead of jq's
compact-but-arcane syntax, it has you write JS. It features an awesome
interactive mode, too, complete with the ability to collapse and expand nodes.
Well worth playing with, and especially handy when paired with curl or HTTPie
for exploring APIs interactively. https://github.com/antonmedv/fx


gron is a command-line tool for flattening JSON so that you can grep it. As the
authors say, "It eases the exploration of APIs that return large blobs of JSON
but have terrible documentation." https://github.com/tomnomnom/gron


simdjson is a project to speed up JSON parsers by using SIMD instructions to
parallelize them intelligently. Has bindings in many languages.
https://github.com/simdjson/simdjson


CSS3PIE is a polyfill to make border-radius, background gradients, and maybe
other things work in IE 6-9: http://css3pie.com/


hammer.js is a JS library for handling multi-touch events cleanly. "Can touch
this" is the slogan, which probably tells you what it's named for.
http://eightmedia.github.io/hammer.js/


Spencer wrote this shell script to bisect within a given commit, for when
the bug's in one of those bomb commits:
https://gist.github.com/srathbun/9b891162c462fc0ec9ea


OnionShare lets you share files of arbitrary size peer-to-peer. Go Tor.
https://github.com/micahflee/onionshare


warp is a tool for sharing terminal sessions, complete with input swapping.
Should check it out at some point. https://github.com/spolu/warp


LearnGitBranching is a nice graphical tutorial that would be great for
teaching novices how git works. I wish it actually showed you the contents of
files, but that might be expecting a bit much:
http://pcottle.github.io/learnGitBranching/


ipfw is a firewall first and foremost, but you can use it for bandwidth
throttling, and thus for simulating low-bandwidth connections:
http://apple.stackexchange.com/a/46378


lsof is for more than files. -i will let you scan for what's grabbed a
port, which is pretty cool.


diff2html takes arbitrary diffs and generates HTML files representing them. It
is quite handy when introducing novices to the diff format, and also for
showing textual diffs to a reasonably technical normal user (for instance,
showing tech support the changes in an external website they care about, in
conjunction with urlwatch).


diffscuss is a format for plain-text diff-based code reviews:
https://github.com/hut8labs/diffscuss


Sandstorm is a webapp sandboxing system meant to enable the sort of
personal-cloud setup I hope will be feasible for normals someday:
https://github.com/sandstorm-io/sandstorm


Bourbon Neat is a SASS grid framework that lets you have really clean markup.
Presumably it sacrifices older browsers.
http://neat.bourbon.io/


Lumen is meant to be a framework for building color themes in Sass based on
relationships between colors, which sounds pretty interesting to me.
https://tallys.github.io/lumen/sassdoc/


C3.js is a JavaScript charting library built on top of D3.js. No IE 8 support.
http://c3js.org/


CodeMirror is an open-source HTML-based text editor. Could be great for
giving people "try it out"-style functionality without too much effort:
https://github.com/codemirror/CodeMirror/


maim is a command-line tool for taking screenshots on Linux. Paired with an
imgur bash uploader (or one to upload to my own hosting), could be a viable
replacement for CloudApp. https://github.com/naelstrof/maim


murder uses BitTorrent to deploy things to massive arrays of servers. Not a
problem I'm ever likely to have, but a brilliant solution to this problem
nonetheless. https://github.com/lg/murder


[Cap'n Proto](https://capnproto.org/) is a very fast cross-language data
interchange format - as the site says, "think JSON, except binary". It's
designed by the guy who originally did Google's protobufs, because after doing
protobufs he wanted to start from a clean slate. Sounds like a great tool for
internal distributed systems where scaling really matters.


git-lfs is Yet Another Solution to storing large files in Git. It's written by
GitHub, and keeps the actual large files on an HTTPS server based on your
configuration. Might want to try it someday. You can apparently just use git
normally after setup, which is a nice touch.
https://git-lfs.github.com


airplane-mode provides an API wrapper server that caches responses so you can
work offline (for instance, on airplanes).
https://github.com/jeremiak/airplane-mode


tota11y is an in-browser accessibility linter: https://github.com/Khan/tota11y


Share a laptop's net connection with a USB-connected Android device:
https://github.com/Genymobile/gnirehtet


Show a USB-connected Android device's screen on a desktop machine:
https://github.com/Genymobile/scrcpy


FORGE is a bizarre but interesting take on GUI construction, exposing its API
via a Unix-like filesystem: https://www.fornaxis.org/forge/


Android Password Store is an app for working with the password store format
encouraged by pass (see above). It's open source so you could review it and
build it yourself: https://github.com/zeapo/Android-Password-Store


An interesting alternative to pass is Master Password, which uses a
deterministic algorithm to generate site-specific passwords from a master
password, your name, and the site you're visiting. That way, there are no
stored files to attack, and you can't lose your password archive to human error
or device destruction. The only secret is in your head, and you can install the
software wherever you need to.


Known may be the one-click open-source 'personal web presence' package I've
wished existed, so mortals didn't have to sign away everything to one vendor or
another: https://withknown.com/


Zrhythm is an interesting-looking DAW that's open source and apparently
highly-scriptable. Audacity is working fine for me so far, but I may want to
look into this at some point. https://www.zrythm.org/


sox is a command-line audio processing tool. Seems like it might be roughly the
imagemagick of the audio world, and I'm not sure why I'd never heard of it
until now: http://sox.sourceforge.net/


LabelNation is a piece of command-line software for printing mailing labels.
I'm not sure I'll ever have need of such a thing, but it's the sort of tool I'm
prone to even forget exists, so here it is.
https://www.red-bean.com/labelnation/


macintosh.js is a one-shot download that gives you an emulated Quadra for using
Classic Mac apps. Not sure how well it works, but it looks like it might be a
lot easier to use than setting up SheepShaver myself.
https://github.com/felixrieseberg/macintosh.js


Actually Portable Executables (APE) is a clever hack of a binary file format to
allow a single x86 executable to run on Linux, OS X, and Windows.
https://justine.storage.googleapis.com/ape.html
